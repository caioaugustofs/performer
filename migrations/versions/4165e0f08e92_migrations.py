"""migrations

Revision ID: 4165e0f08e92
Revises: 
Create Date: 2025-05-08 15:44:13.458160

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4165e0f08e92'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('video_url', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('muscle_group', sa.JSON(), nullable=True),
    sa.Column('equipment_needed', sa.JSON(), nullable=True),
    sa.Column('difficulty', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('calories_burned_estimated', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercises_id'), 'exercises', ['id'], unique=False)
    op.create_table('progress_tracking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('peso', sa.Float(), nullable=True),
    sa.Column('altura', sa.Float(), nullable=True),
    sa.Column('body_measurements', sa.JSON(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_progress_tracking_id'), 'progress_tracking', ['id'], unique=False)
    op.create_index(op.f('ix_progress_tracking_user_id'), 'progress_tracking', ['user_id'], unique=False)
    op.create_table('user_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('data_de_nascimento', sa.String(), nullable=True),
    sa.Column('altura', sa.Float(), nullable=True),
    sa.Column('peso', sa.Float(), nullable=True),
    sa.Column('sexo', sa.String(), nullable=True),
    sa.Column('objetivo', sa.String(), nullable=True),
    sa.Column('fitness_level', sa.String(), nullable=True),
    sa.Column('goal', sa.JSON(), nullable=True),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('preferred_units', sa.String(), nullable=False),
    sa.Column('equipment_available', sa.JSON(), nullable=True),
    sa.Column('injuries', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_details_id'), 'user_details', ['id'], unique=False)
    op.create_index(op.f('ix_user_details_user_id'), 'user_details', ['user_id'], unique=False)
    op.create_table('user_exercise_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('weight_used', sa.String(), nullable=True),
    sa.Column('reps_completed', sa.Integer(), nullable=True),
    sa.Column('review', sa.Integer(), nullable=True),
    sa.Column('notes_info', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_exercise_logs_exercise_id'), 'user_exercise_logs', ['exercise_id'], unique=False)
    op.create_index(op.f('ix_user_exercise_logs_id'), 'user_exercise_logs', ['id'], unique=False)
    op.create_index(op.f('ix_user_exercise_logs_session_id'), 'user_exercise_logs', ['session_id'], unique=False)
    op.create_table('user_workout_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('workout_id', sa.Integer(), nullable=False),
    sa.Column('scheduled_date', sa.DateTime(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_workout_schedules_id'), 'user_workout_schedules', ['id'], unique=False)
    op.create_index(op.f('ix_user_workout_schedules_user_id'), 'user_workout_schedules', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_workout_schedules_workout_id'), 'user_workout_schedules', ['workout_id'], unique=False)
    op.create_table('user_workout_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('workout_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('calories_burned', sa.Float(), nullable=True),
    sa.Column('difficulty_perceived', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_workout_sessions_id'), 'user_workout_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_workout_sessions_user_id'), 'user_workout_sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_workout_sessions_workout_id'), 'user_workout_sessions', ['workout_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('password_reset_token', sa.String(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('subscription_status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('password_reset_token'),
    sa.UniqueConstraint('username')
    )
    op.create_table('workout_exercises',
    sa.Column('workout_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('sets', sa.Integer(), nullable=True),
    sa.Column('reps', sa.Integer(), nullable=True),
    sa.Column('rest_seconds', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_warmup', sa.Boolean(), nullable=False),
    sa.Column('is_cooldown', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('workout_id', 'exercise_id')
    )
    op.create_index(op.f('ix_workout_exercises_exercise_id'), 'workout_exercises', ['exercise_id'], unique=False)
    op.create_index(op.f('ix_workout_exercises_workout_id'), 'workout_exercises', ['workout_id'], unique=False)
    op.create_table('workouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('duration_min', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('rest_between_exercises_seconds', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workouts_id'), 'workouts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workouts_id'), table_name='workouts')
    op.drop_table('workouts')
    op.drop_index(op.f('ix_workout_exercises_workout_id'), table_name='workout_exercises')
    op.drop_index(op.f('ix_workout_exercises_exercise_id'), table_name='workout_exercises')
    op.drop_table('workout_exercises')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_workout_sessions_workout_id'), table_name='user_workout_sessions')
    op.drop_index(op.f('ix_user_workout_sessions_user_id'), table_name='user_workout_sessions')
    op.drop_index(op.f('ix_user_workout_sessions_id'), table_name='user_workout_sessions')
    op.drop_table('user_workout_sessions')
    op.drop_index(op.f('ix_user_workout_schedules_workout_id'), table_name='user_workout_schedules')
    op.drop_index(op.f('ix_user_workout_schedules_user_id'), table_name='user_workout_schedules')
    op.drop_index(op.f('ix_user_workout_schedules_id'), table_name='user_workout_schedules')
    op.drop_table('user_workout_schedules')
    op.drop_index(op.f('ix_user_exercise_logs_session_id'), table_name='user_exercise_logs')
    op.drop_index(op.f('ix_user_exercise_logs_id'), table_name='user_exercise_logs')
    op.drop_index(op.f('ix_user_exercise_logs_exercise_id'), table_name='user_exercise_logs')
    op.drop_table('user_exercise_logs')
    op.drop_index(op.f('ix_user_details_user_id'), table_name='user_details')
    op.drop_index(op.f('ix_user_details_id'), table_name='user_details')
    op.drop_table('user_details')
    op.drop_index(op.f('ix_progress_tracking_user_id'), table_name='progress_tracking')
    op.drop_index(op.f('ix_progress_tracking_id'), table_name='progress_tracking')
    op.drop_table('progress_tracking')
    op.drop_index(op.f('ix_exercises_id'), table_name='exercises')
    op.drop_table('exercises')
    # ### end Alembic commands ###
