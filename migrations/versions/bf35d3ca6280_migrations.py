"""migrations

Revision ID: bf35d3ca6280
Revises:
Create Date: 2025-05-12 13:11:14.609990
"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'bf35d3ca6280'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'achievements',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=False),
        sa.Column('icon_url', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('achievements', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_achievements_id'), ['id'], unique=False
        )

    op.create_table(
        'cardio_exercises',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('type', sa.String(), nullable=False),
        sa.Column('default_duration_minutes', sa.Integer(), nullable=True),
        sa.Column('default_distance_km', sa.Float(), nullable=True),
        sa.Column('default_calories_burned', sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('cardio_exercises', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_cardio_exercises_id'), ['id'], unique=False
        )

    op.create_table(
        'equipment',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('image_url', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('equipment', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_equipment_id'), ['id'], unique=False
        )

    op.create_table(
        'exercises',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('video_url', sa.String(), nullable=True),
        sa.Column('image_url', sa.String(), nullable=True),
        sa.Column('muscle_group', sa.JSON(), nullable=True),
        sa.Column('equipment_needed', sa.JSON(), nullable=True),
        sa.Column('difficulty', sa.Integer(), nullable=True),
        sa.Column('tags', sa.JSON(), nullable=True),
        sa.Column('calories_burned_estimated', sa.Float(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('exercises', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_exercises_id'), ['id'], unique=False
        )

    op.create_table(
        'food_items',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', sa.JSON(), nullable=True),
        sa.Column('calories_per_100g', sa.Float(), nullable=False),
        sa.Column('protein', sa.Float(), nullable=False),
        sa.Column('carbs', sa.Float(), nullable=False),
        sa.Column('fats', sa.Float(), nullable=False),
        sa.Column('fiber', sa.Float(), nullable=False),
        sa.Column('sugar', sa.Float(), nullable=False),
        sa.Column('sodium', sa.Float(), nullable=False),
        sa.Column('is_vegan', sa.Boolean(), nullable=False),
        sa.Column('is_vegetarian', sa.Boolean(), nullable=False),
        sa.Column('is_gluten_free', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'progress_tracking',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('peso', sa.Float(), nullable=True),
        sa.Column('altura', sa.Float(), nullable=True),
        sa.Column('muscle_mass_percentage', sa.Float(), nullable=True),
        sa.Column('body_fat_percentage', sa.Float(), nullable=True),
        sa.Column('IMC', sa.Float(), nullable=True),
        sa.Column('waist_circumference', sa.Float(), nullable=True),
        sa.Column('body_measurements', sa.JSON(), nullable=True),
        sa.Column('date', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('progress_tracking', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_progress_tracking_id'), ['id'], unique=False
        )
        batch_op.create_index(
            batch_op.f('ix_progress_tracking_user_id'),
            ['user_id'],
            unique=False,
        )

    op.create_table(
        'social_comments',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('post_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('content', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('social_comments', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_social_comments_id'), ['id'], unique=False
        )

    op.create_table(
        'social_likes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('post_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('social_likes', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_social_likes_id'), ['id'], unique=False
        )

    op.create_table(
        'social_posts',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('content', sa.String(), nullable=False),
        sa.Column('media_url', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('social_posts', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_social_posts_id'), ['id'], unique=False
        )

    op.create_table(
        'user_achievements',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('achievement_id', sa.Integer(), nullable=False),
        sa.Column('unlocked_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('user_achievements', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_user_achievements_id'), ['id'], unique=False
        )

    op.create_table(
        'user_cardio_logs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('cardio_exercise_id', sa.Integer(), nullable=False),
        sa.Column('session_id', sa.Integer(), nullable=False),
        sa.Column('duration_minutes', sa.Integer(), nullable=True),
        sa.Column('distance_km', sa.Float(), nullable=True),
        sa.Column('avg_speed_kmh', sa.Float(), nullable=True),
        sa.Column('max_speed_kmh', sa.Float(), nullable=True),
        sa.Column('calories_burned', sa.Float(), nullable=True),
        sa.Column('incline_percent', sa.Float(), nullable=True),
        sa.Column('resistance_level', sa.Integer(), nullable=True),
        sa.Column('notes', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('user_cardio_logs', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_user_cardio_logs_id'), ['id'], unique=False
        )

    op.create_table(
        'user_details',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('data_de_nascimento', sa.String(), nullable=True),
        sa.Column('altura', sa.Float(), nullable=True),
        sa.Column('peso', sa.Float(), nullable=True),
        sa.Column('sexo', sa.String(), nullable=True),
        sa.Column('objetivo', sa.String(), nullable=True),
        sa.Column('fitness_level', sa.String(), nullable=True),
        sa.Column('goal', sa.JSON(), nullable=True),
        sa.Column('profile_picture_url', sa.String(), nullable=True),
        sa.Column('preferred_units', sa.String(), nullable=False),
        sa.Column('equipment_available', sa.JSON(), nullable=True),
        sa.Column('injuries', sa.JSON(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('user_details', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_user_details_id'), ['id'], unique=False
        )
        batch_op.create_index(
            batch_op.f('ix_user_details_user_id'), ['user_id'], unique=False
        )

    op.create_table(
        'user_exercise_logs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('session_id', sa.Integer(), nullable=False),
        sa.Column('exercise_id', sa.Integer(), nullable=False),
        sa.Column('weight_used', sa.String(), nullable=True),
        sa.Column('reps_completed', sa.Integer(), nullable=True),
        sa.Column('review', sa.Integer(), nullable=True),
        sa.Column('notes_info', sa.String(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('user_exercise_logs', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_user_exercise_logs_exercise_id'),
            ['exercise_id'],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f('ix_user_exercise_logs_id'), ['id'], unique=False
        )
        batch_op.create_index(
            batch_op.f('ix_user_exercise_logs_session_id'),
            ['session_id'],
            unique=False,
        )

    op.create_table(
        'user_hiit_logs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('workout_exercise_id', sa.Integer(), nullable=False),
        sa.Column('session_id', sa.Integer(), nullable=False),
        sa.Column('set_number', sa.Integer(), nullable=False),
        sa.Column('actual_time_per_rep_seconds', sa.Float(), nullable=True),
        sa.Column('rest_taken_seconds', sa.Float(), nullable=True),
        sa.Column('completed_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('user_hiit_logs', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_user_hiit_logs_id'), ['id'], unique=False
        )

    op.create_table(
        'user_meal_logs',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('custom_food_name', sa.String(), nullable=True),
        sa.Column('custom_food_description', sa.String(), nullable=True),
        sa.Column('meal_calories', sa.Float(), nullable=False),
        sa.Column('quantity_grams', sa.Float(), nullable=False),
        sa.Column('food_item_id', sa.Integer(), nullable=False),
        sa.Column('meal_time', sa.String(), nullable=False),
        sa.Column('date', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'user_workout_schedules',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('workout_id', sa.Integer(), nullable=False),
        sa.Column('scheduled_date', sa.DateTime(), nullable=True),
        sa.Column('scheduled_time', sa.DateTime(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table(
        'user_workout_schedules', schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_user_workout_schedules_id'), ['id'], unique=False
        )
        batch_op.create_index(
            batch_op.f('ix_user_workout_schedules_user_id'),
            ['user_id'],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f('ix_user_workout_schedules_workout_id'),
            ['workout_id'],
            unique=False,
        )

    op.create_table(
        'user_workout_sessions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('workout_id', sa.Integer(), nullable=False),
        sa.Column('start_time', sa.DateTime(), nullable=True),
        sa.Column('end_time', sa.DateTime(), nullable=True),
        sa.Column('calories_burned', sa.Float(), nullable=True),
        sa.Column('difficulty_perceived', sa.Integer(), nullable=True),
        sa.Column('rating', sa.Integer(), nullable=True),
        sa.Column(
            'total_workout_duration_seconds', sa.Integer(), nullable=True
        ),
        sa.Column('total_rest_duration_seconds', sa.Integer(), nullable=True),
        sa.Column('rounds_completed', sa.Integer(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table(
        'user_workout_sessions', schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_user_workout_sessions_id'), ['id'], unique=False
        )
        batch_op.create_index(
            batch_op.f('ix_user_workout_sessions_user_id'),
            ['user_id'],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f('ix_user_workout_sessions_workout_id'),
            ['workout_id'],
            unique=False,
        )

    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(), nullable=False),
        sa.Column('password', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('email_verified', sa.Boolean(), nullable=False),
        sa.Column('password_reset_token', sa.String(), nullable=True),
        sa.Column('last_login', sa.DateTime(), nullable=True),
        sa.Column('role', sa.String(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('subscription_status', sa.String(), nullable=False),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username'),
    )
    op.create_table(
        'workout_exercises',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('workout_id', sa.Integer(), nullable=False),
        sa.Column('exercise_id', sa.Integer(), nullable=False),
        sa.Column('exercise_type', sa.String(), nullable=False),
        sa.Column('cardio_exercise_id', sa.Integer(), nullable=True),
        sa.Column('target_duration_minutes', sa.Integer(), nullable=True),
        sa.Column('target_distance_km', sa.Float(), nullable=True),
        sa.Column('target_speed_kmh', sa.Float(), nullable=True),
        sa.Column('sets', sa.Integer(), nullable=True),
        sa.Column('reps', sa.Integer(), nullable=True),
        sa.Column('time_per_rep_seconds', sa.Integer(), nullable=True),
        sa.Column('rest_between_sets_seconds', sa.Integer(), nullable=True),
        sa.Column(
            'max_rest_between_reps_seconds', sa.Integer(), nullable=True
        ),
        sa.Column('rest_seconds', sa.Integer(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('is_warmup', sa.Boolean(), nullable=False),
        sa.Column('is_cooldown', sa.Boolean(), nullable=False),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('workout_exercises', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_workout_exercises_exercise_id'),
            ['exercise_id'],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f('ix_workout_exercises_id'), ['id'], unique=False
        )
        batch_op.create_index(
            batch_op.f('ix_workout_exercises_workout_id'),
            ['workout_id'],
            unique=False,
        )

    op.create_table(
        'workouts',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('duration_min', sa.Integer(), nullable=True),
        sa.Column('difficulty', sa.Integer(), nullable=True),
        sa.Column('type', sa.String(), nullable=True),
        sa.Column(
            'rest_between_exercises_seconds', sa.Integer(), nullable=True
        ),
        sa.Column('is_public', sa.Boolean(), nullable=False),
        sa.Column('created_by', sa.Integer(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('workouts', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_workouts_id'), ['id'], unique=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workouts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workouts_id'))

    op.drop_table('workouts')
    with op.batch_alter_table('workout_exercises', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workout_exercises_workout_id'))
        batch_op.drop_index(batch_op.f('ix_workout_exercises_id'))
        batch_op.drop_index(batch_op.f('ix_workout_exercises_exercise_id'))

    op.drop_table('workout_exercises')
    op.drop_table('users')
    with op.batch_alter_table(
        'user_workout_sessions', schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_workout_sessions_workout_id'))
        batch_op.drop_index(batch_op.f('ix_user_workout_sessions_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_workout_sessions_id'))

    op.drop_table('user_workout_sessions')
    with op.batch_alter_table(
        'user_workout_schedules', schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_workout_schedules_workout_id'))
        batch_op.drop_index(batch_op.f('ix_user_workout_schedules_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_workout_schedules_id'))

    op.drop_table('user_workout_schedules')
    op.drop_table('user_meal_logs')
    with op.batch_alter_table('user_hiit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_hiit_logs_id'))

    op.drop_table('user_hiit_logs')
    with op.batch_alter_table('user_exercise_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_exercise_logs_session_id'))
        batch_op.drop_index(batch_op.f('ix_user_exercise_logs_id'))
        batch_op.drop_index(batch_op.f('ix_user_exercise_logs_exercise_id'))

    op.drop_table('user_exercise_logs')
    with op.batch_alter_table('user_details', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_details_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_details_id'))

    op.drop_table('user_details')
    with op.batch_alter_table('user_cardio_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_cardio_logs_id'))

    op.drop_table('user_cardio_logs')
    with op.batch_alter_table('user_achievements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_achievements_id'))

    op.drop_table('user_achievements')
    with op.batch_alter_table('social_posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_social_posts_id'))

    op.drop_table('social_posts')
    with op.batch_alter_table('social_likes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_social_likes_id'))

    op.drop_table('social_likes')
    with op.batch_alter_table('social_comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_social_comments_id'))

    op.drop_table('social_comments')
    with op.batch_alter_table('progress_tracking', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_progress_tracking_user_id'))
        batch_op.drop_index(batch_op.f('ix_progress_tracking_id'))

    op.drop_table('progress_tracking')
    op.drop_table('food_items')
    with op.batch_alter_table('exercises', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_exercises_id'))

    op.drop_table('exercises')
    with op.batch_alter_table('equipment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_equipment_id'))

    op.drop_table('equipment')
    with op.batch_alter_table('cardio_exercises', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cardio_exercises_id'))

    op.drop_table('cardio_exercises')
    with op.batch_alter_table('achievements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_achievements_id'))

    op.drop_table('achievements')
    # ### end Alembic commands ###
