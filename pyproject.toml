[project]
name = "performer"
version = "0.1.0"
description = ""
authors = [
    {name = "caioaugustofs",email = "caioaugusto.fs@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "fastapi[standard] (>=0.115.12,<0.116.0)",
    "sqlalchemy[asyncio] (>=2.0.40,<3.0.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "psycopg[binary] (>=3.2.7,<4.0.0)",
    "alembic (>=1.15.2,<2.0.0)",
    "aiosqlite (>=0.21.0,<0.22.0)",
    "toml (>=0.10.2,<0.11.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
taskipy = "^1.14.1"
ruff = "^0.11.8"
poethepoet = "^0.34.0"
pytest-asyncio = "^0.26.0"
isort = "^6.0.1"
blue = "^0.9.1"


[tool.poetry.group.otel.dependencies]
opentelemetry-distro = "^0.53b1"
opentelemetry-exporter-otlp = "^1.32.1"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations','performer/model/models.py']

[tool.ruff.lint]
preview = true
select = ['I','F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'


[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'


[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'isort . && blue . &&ruff format'
pre_test = 'task lint'
test = 'clear &pytest -s -x --cov=performer -vv'
post_test = 'coverage html'
run = 'fastapi dev performer/app.py --host 0.0.0.0 --port 8001'
migrar = 'alembic revision --autogenerate -m "migrations" && alembic upgrade head'
migrar_tab = 'alembic upgrade head'


[tool.poe]
envfile = '.env'


[tool.poe.tasks.serve]
shell = "opentelemetry-instrument uvicorn  performer.app:app --host 0.0.0.0 --port 8001 "

[tool.poe.tasks]
otel-install = 'opentelemetry-bootstrap -a install'
